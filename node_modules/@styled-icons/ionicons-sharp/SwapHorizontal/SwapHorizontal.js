"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SwapHorizontalDimensions = exports.SwapHorizontal = void 0;
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var styled_icon_1 = require("@styled-icons/styled-icon");
exports.SwapHorizontal = React.forwardRef(function (props, ref) {
    var attrs = {
        "fill": "currentColor",
        "xmlns": "http://www.w3.org/2000/svg",
    };
    return (React.createElement(styled_icon_1.StyledIconBase, tslib_1.__assign({ iconAttrs: attrs, iconVerticalAlign: "middle", iconViewBox: "0 0 512 512" }, props, { ref: ref }),
        React.createElement("polyline", { fill: "none", stroke: "currentColor", strokeLinecap: "square", strokeMiterlimit: 10, strokeWidth: 32, points: "304 48 416 160 304 272" }),
        React.createElement("line", { x1: 398.87, x2: 96, y1: 160, y2: 160, fill: "none", stroke: "currentColor", strokeLinecap: "square", strokeMiterlimit: 10, strokeWidth: 32 }),
        React.createElement("polyline", { fill: "none", stroke: "currentColor", strokeLinecap: "square", strokeMiterlimit: 10, strokeWidth: 32, points: "208 464 96 352 208 240" }),
        React.createElement("line", { x1: 114, x2: 416, y1: 352, y2: 352, fill: "none", stroke: "currentColor", strokeLinecap: "square", strokeMiterlimit: 10, strokeWidth: 32 })));
});
exports.SwapHorizontal.displayName = 'SwapHorizontal';
exports.SwapHorizontalDimensions = { height: 512, width: 512 };
